import time
import board

# pylint:disable=no-member
from adafruit_lsm6ds import Rate, AccelRange, GyroRange
from adafruit_register.i2c_bits import RWBits
from adafruit_register.i2c_bit import RWBit, ROBit
from micropython import const
from adafruit_bus_device import i2c_device
import busio # type: ignore
import time

from adafruit_lsm6ds.lsm6dsox import LSM6DSOX 

print("innit \n")

sda_pin = board.GP16 
scl_pin = board.GP17
_LSM6DS_CTRL8_XL = const(0x17)


i2c = busio.I2C(scl=scl_pin,sda=sda_pin)

sensor = LSM6DSOX(i2c)
bV = None

sensor.low_pass_filter = bV


class I2CWrapper:
    i2c_device = i2c_device.I2CDevice(i2c, 0x6A)
    control_bits = RWBits(3, _LSM6DS_CTRL8_XL, 0)
    full_register = RWBits(8, _LSM6DS_CTRL8_XL, 0)
    
print(f"setting to {bV}")
full_register = I2CWrapper.full_register.__get__(I2CWrapper)

print(f"full register {bin(full_register)}" )

time.sleep(3)
s_time = time.monotonic()


while True:
    data = list(sensor.acceleration)
    data.insert(0, time.monotonic() - s_time)
    print(tuple(data))